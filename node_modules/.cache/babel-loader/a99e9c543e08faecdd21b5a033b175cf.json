{"ast":null,"code":"/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n'use strict';\n/**\n * Replace tokens in `str` with a temporary, heuristic placeholder.\n *\n * ```js\n * tokens.before('{a\\\\,b}');\n * //=> '{__ID1__}'\n * ```\n *\n * @param  {String} `str`\n * @return {String} String with placeholders.\n * @api public\n */\n\nexports.before = function before(str, re) {\n  return str.replace(re, function (match) {\n    var id = randomize();\n    cache[id] = match;\n    return '__ID' + id + '__';\n  });\n};\n/**\n * Replace placeholders in `str` with original tokens.\n *\n * ```js\n * tokens.after('{__ID1__}');\n * //=> '{a\\\\,b}'\n * ```\n *\n * @param  {String} `str` String with placeholders\n * @return {String} `str` String with original tokens.\n * @api public\n */\n\n\nexports.after = function after(str) {\n  return str.replace(/__ID(.{5})__/g, function (_, id) {\n    return cache[id];\n  });\n};\n\nfunction randomize() {\n  return Math.random().toString().slice(2, 7);\n}\n\nvar cache = {};","map":{"version":3,"names":["exports","before","str","re","replace","match","id","randomize","cache","after","_","Math","random","toString","slice"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/preserve/index.js"],"sourcesContent":["/*!\n * preserve <https://github.com/jonschlinkert/preserve>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n/**\n * Replace tokens in `str` with a temporary, heuristic placeholder.\n *\n * ```js\n * tokens.before('{a\\\\,b}');\n * //=> '{__ID1__}'\n * ```\n *\n * @param  {String} `str`\n * @return {String} String with placeholders.\n * @api public\n */\n\nexports.before = function before(str, re) {\n  return str.replace(re, function (match) {\n    var id = randomize();\n    cache[id] = match;\n    return '__ID' + id + '__';\n  });\n};\n\n/**\n * Replace placeholders in `str` with original tokens.\n *\n * ```js\n * tokens.after('{__ID1__}');\n * //=> '{a\\\\,b}'\n * ```\n *\n * @param  {String} `str` String with placeholders\n * @return {String} `str` String with original tokens.\n * @api public\n */\n\nexports.after = function after(str) {\n  return str.replace(/__ID(.{5})__/g, function (_, id) {\n    return cache[id];\n  });\n};\n\nfunction randomize() {\n  return Math.random().toString().slice(2, 7);\n}\n\nvar cache = {};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CAACC,MAAR,GAAiB,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;EACxC,OAAOD,GAAG,CAACE,OAAJ,CAAYD,EAAZ,EAAgB,UAAUE,KAAV,EAAiB;IACtC,IAAIC,EAAE,GAAGC,SAAS,EAAlB;IACAC,KAAK,CAACF,EAAD,CAAL,GAAYD,KAAZ;IACA,OAAO,SAASC,EAAT,GAAc,IAArB;EACD,CAJM,CAAP;AAKD,CAND;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAN,OAAO,CAACS,KAAR,GAAgB,SAASA,KAAT,CAAeP,GAAf,EAAoB;EAClC,OAAOA,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAUM,CAAV,EAAaJ,EAAb,EAAiB;IACnD,OAAOE,KAAK,CAACF,EAAD,CAAZ;EACD,CAFM,CAAP;AAGD,CAJD;;AAMA,SAASC,SAAT,GAAqB;EACnB,OAAOI,IAAI,CAACC,MAAL,GAAcC,QAAd,GAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,CAAlC,CAAP;AACD;;AAED,IAAIN,KAAK,GAAG,EAAZ"},"metadata":{},"sourceType":"script"}