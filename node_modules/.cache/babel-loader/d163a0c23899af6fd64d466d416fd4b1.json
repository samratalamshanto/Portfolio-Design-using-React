{"ast":null,"code":"/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nmodule.exports = function isNumber(num) {\n  var type = typeof num;\n\n  if (type === 'string' || num instanceof String) {\n    // an empty string would be coerced to true with the below logic\n    if (!num.trim()) return false;\n  } else if (type !== 'number' && !(num instanceof Number)) {\n    return false;\n  }\n\n  return num - num + 1 >= 0;\n};","map":{"version":3,"names":["module","exports","isNumber","num","type","String","trim","Number"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/randomatic/node_modules/is-number/index.js"],"sourcesContent":["/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isNumber(num) {\n  var type = typeof num;\n\n  if (type === 'string' || num instanceof String) {\n    // an empty string would be coerced to true with the below logic\n    if (!num.trim()) return false;\n  } else if (type !== 'number' && !(num instanceof Number)) {\n    return false;\n  }\n\n  return (num - num + 1) >= 0;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EACtC,IAAIC,IAAI,GAAG,OAAOD,GAAlB;;EAEA,IAAIC,IAAI,KAAK,QAAT,IAAqBD,GAAG,YAAYE,MAAxC,EAAgD;IAC9C;IACA,IAAI,CAACF,GAAG,CAACG,IAAJ,EAAL,EAAiB,OAAO,KAAP;EAClB,CAHD,MAGO,IAAIF,IAAI,KAAK,QAAT,IAAqB,EAAED,GAAG,YAAYI,MAAjB,CAAzB,EAAmD;IACxD,OAAO,KAAP;EACD;;EAED,OAAQJ,GAAG,GAAGA,GAAN,GAAY,CAAb,IAAmB,CAA1B;AACD,CAXD"},"metadata":{},"sourceType":"script"}