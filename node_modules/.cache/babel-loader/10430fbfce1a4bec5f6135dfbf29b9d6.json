{"ast":null,"code":"\"use strict\";\n\nmodule.exports = make;\nmodule.exports.ctor = ctor;\nmodule.exports.objCtor = objCtor;\nmodule.exports.obj = obj;\n\nvar through2 = require(\"through2\");\n\nvar xtend = require(\"xtend\");\n\nfunction ctor(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  var Filter = through2.ctor(options, function (chunk, encoding, callback) {\n    if (this.options.wantStrings) chunk = chunk.toString();\n    if (fn.call(this, chunk, this._index++)) this.push(chunk);\n    return callback();\n  });\n  Filter.prototype._index = 0;\n  return Filter;\n}\n\nfunction objCtor(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return ctor(options, fn);\n}\n\nfunction make(options, fn) {\n  return ctor(options, fn)();\n}\n\nfunction obj(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options;\n    options = {};\n  }\n\n  options = xtend({\n    objectMode: true,\n    highWaterMark: 16\n  }, options);\n  return make(options, fn);\n}","map":{"version":3,"names":["module","exports","make","ctor","objCtor","obj","through2","require","xtend","options","fn","Filter","chunk","encoding","callback","wantStrings","toString","call","_index","push","prototype","objectMode","highWaterMark"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/through2-filter/index.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports = make\nmodule.exports.ctor = ctor\nmodule.exports.objCtor = objCtor\nmodule.exports.obj = obj\n\nvar through2 = require(\"through2\")\nvar xtend = require(\"xtend\")\n\nfunction ctor(options, fn) {\n  if (typeof options == \"function\") {\n    fn = options\n    options = {}\n  }\n\n  var Filter = through2.ctor(options, function (chunk, encoding, callback) {\n    if (this.options.wantStrings) chunk = chunk.toString()\n    if (fn.call(this, chunk, this._index++)) this.push(chunk)\n    return callback()\n  })\n  Filter.prototype._index = 0\n  return Filter\n}\n\nfunction objCtor(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options\n    options = {}\n  }\n  options = xtend({objectMode: true, highWaterMark: 16}, options)\n  return ctor(options, fn)\n}\n\nfunction make(options, fn) {\n  return ctor(options, fn)()\n}\n\nfunction obj(options, fn) {\n  if (typeof options === \"function\") {\n    fn = options\n    options = {}\n  }\n  options = xtend({objectMode: true, highWaterMark: 16}, options)\n  return make(options, fn)\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAF,MAAM,CAACC,OAAP,CAAeE,IAAf,GAAsBA,IAAtB;AACAH,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAyBA,OAAzB;AACAJ,MAAM,CAACC,OAAP,CAAeI,GAAf,GAAqBA,GAArB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AAEA,SAASJ,IAAT,CAAcM,OAAd,EAAuBC,EAAvB,EAA2B;EACzB,IAAI,OAAOD,OAAP,IAAkB,UAAtB,EAAkC;IAChCC,EAAE,GAAGD,OAAL;IACAA,OAAO,GAAG,EAAV;EACD;;EAED,IAAIE,MAAM,GAAGL,QAAQ,CAACH,IAAT,CAAcM,OAAd,EAAuB,UAAUG,KAAV,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;IACvE,IAAI,KAAKL,OAAL,CAAaM,WAAjB,EAA8BH,KAAK,GAAGA,KAAK,CAACI,QAAN,EAAR;IAC9B,IAAIN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAcL,KAAd,EAAqB,KAAKM,MAAL,EAArB,CAAJ,EAAyC,KAAKC,IAAL,CAAUP,KAAV;IACzC,OAAOE,QAAQ,EAAf;EACD,CAJY,CAAb;EAKAH,MAAM,CAACS,SAAP,CAAiBF,MAAjB,GAA0B,CAA1B;EACA,OAAOP,MAAP;AACD;;AAED,SAASP,OAAT,CAAiBK,OAAjB,EAA0BC,EAA1B,EAA8B;EAC5B,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;IACjCC,EAAE,GAAGD,OAAL;IACAA,OAAO,GAAG,EAAV;EACD;;EACDA,OAAO,GAAGD,KAAK,CAAC;IAACa,UAAU,EAAE,IAAb;IAAmBC,aAAa,EAAE;EAAlC,CAAD,EAAwCb,OAAxC,CAAf;EACA,OAAON,IAAI,CAACM,OAAD,EAAUC,EAAV,CAAX;AACD;;AAED,SAASR,IAAT,CAAcO,OAAd,EAAuBC,EAAvB,EAA2B;EACzB,OAAOP,IAAI,CAACM,OAAD,EAAUC,EAAV,CAAJ,EAAP;AACD;;AAED,SAASL,GAAT,CAAaI,OAAb,EAAsBC,EAAtB,EAA0B;EACxB,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;IACjCC,EAAE,GAAGD,OAAL;IACAA,OAAO,GAAG,EAAV;EACD;;EACDA,OAAO,GAAGD,KAAK,CAAC;IAACa,UAAU,EAAE,IAAb;IAAmBC,aAAa,EAAE;EAAlC,CAAD,EAAwCb,OAAxC,CAAf;EACA,OAAOP,IAAI,CAACO,OAAD,EAAUC,EAAV,CAAX;AACD"},"metadata":{},"sourceType":"script"}