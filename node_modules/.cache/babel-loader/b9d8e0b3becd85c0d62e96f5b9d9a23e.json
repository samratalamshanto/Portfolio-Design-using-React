{"ast":null,"code":"/*!\n * expand-brackets <https://github.com/jonschlinkert/expand-brackets>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n'use strict';\n\nvar isPosixBracket = require('is-posix-bracket');\n/**\n * POSIX character classes\n */\n\n\nvar POSIX = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E',\n  punct: '-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n/**\n * Expose `brackets`\n */\n\nmodule.exports = brackets;\n\nfunction brackets(str) {\n  if (!isPosixBracket(str)) {\n    return str;\n  }\n\n  var negated = false;\n\n  if (str.indexOf('[^') !== -1) {\n    negated = true;\n    str = str.split('[^').join('[');\n  }\n\n  if (str.indexOf('[!') !== -1) {\n    negated = true;\n    str = str.split('[!').join('[');\n  }\n\n  var a = str.split('[');\n  var b = str.split(']');\n  var imbalanced = a.length !== b.length;\n  var parts = str.split(/(?::\\]\\[:|\\[?\\[:|:\\]\\]?)/);\n  var len = parts.length,\n      i = 0;\n  var end = '',\n      beg = '';\n  var res = []; // start at the end (innermost) first\n\n  while (len--) {\n    var inner = parts[i++];\n\n    if (inner === '^[!' || inner === '[!') {\n      inner = '';\n      negated = true;\n    }\n\n    var prefix = negated ? '^' : '';\n    var ch = POSIX[inner];\n\n    if (ch) {\n      res.push('[' + prefix + ch + ']');\n    } else if (inner) {\n      if (/^\\[?\\w-\\w\\]?$/.test(inner)) {\n        if (i === parts.length) {\n          res.push('[' + prefix + inner);\n        } else if (i === 1) {\n          res.push(prefix + inner + ']');\n        } else {\n          res.push(prefix + inner);\n        }\n      } else {\n        if (i === 1) {\n          beg += inner;\n        } else if (i === parts.length) {\n          end += inner;\n        } else {\n          res.push('[' + prefix + inner + ']');\n        }\n      }\n    }\n  }\n\n  var result = res.join('|');\n  var rlen = res.length || 1;\n\n  if (rlen > 1) {\n    result = '(?:' + result + ')';\n    rlen = 1;\n  }\n\n  if (beg) {\n    rlen++;\n\n    if (beg.charAt(0) === '[') {\n      if (imbalanced) {\n        beg = '\\\\[' + beg.slice(1);\n      } else {\n        beg += ']';\n      }\n    }\n\n    result = beg + result;\n  }\n\n  if (end) {\n    rlen++;\n\n    if (end.slice(-1) === ']') {\n      if (imbalanced) {\n        end = end.slice(0, end.length - 1) + '\\\\]';\n      } else {\n        end = '[' + end;\n      }\n    }\n\n    result += end;\n  }\n\n  if (rlen > 1) {\n    result = result.split('][').join(']|[');\n\n    if (result.indexOf('|') !== -1 && !/\\(\\?/.test(result)) {\n      result = '(?:' + result + ')';\n    }\n  }\n\n  result = result.replace(/\\[+=|=\\]+/g, '\\\\b');\n  return result;\n}\n\nbrackets.makeRe = function (pattern) {\n  try {\n    return new RegExp(brackets(pattern));\n  } catch (err) {}\n};\n\nbrackets.isMatch = function (str, pattern) {\n  try {\n    return brackets.makeRe(pattern).test(str);\n  } catch (err) {\n    return false;\n  }\n};\n\nbrackets.match = function (arr, pattern) {\n  var len = arr.length,\n      i = 0;\n  var res = arr.slice();\n  var re = brackets.makeRe(pattern);\n\n  while (i < len) {\n    var ele = arr[i++];\n\n    if (!re.test(ele)) {\n      continue;\n    }\n\n    res.splice(i, 1);\n  }\n\n  return res;\n};","map":{"version":3,"names":["isPosixBracket","require","POSIX","alnum","alpha","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","module","exports","brackets","str","negated","indexOf","split","join","a","b","imbalanced","length","parts","len","i","end","beg","res","inner","prefix","ch","push","test","result","rlen","charAt","slice","replace","makeRe","pattern","RegExp","err","isMatch","match","arr","re","ele","splice"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/expand-brackets/index.js"],"sourcesContent":["/*!\n * expand-brackets <https://github.com/jonschlinkert/expand-brackets>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar isPosixBracket = require('is-posix-bracket');\n\n/**\n * POSIX character classes\n */\n\nvar POSIX = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E',\n  punct: '-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word:  'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9',\n};\n\n/**\n * Expose `brackets`\n */\n\nmodule.exports = brackets;\n\nfunction brackets(str) {\n  if (!isPosixBracket(str)) {\n    return str;\n  }\n\n  var negated = false;\n  if (str.indexOf('[^') !== -1) {\n    negated = true;\n    str = str.split('[^').join('[');\n  }\n  if (str.indexOf('[!') !== -1) {\n    negated = true;\n    str = str.split('[!').join('[');\n  }\n\n  var a = str.split('[');\n  var b = str.split(']');\n  var imbalanced = a.length !== b.length;\n\n  var parts = str.split(/(?::\\]\\[:|\\[?\\[:|:\\]\\]?)/);\n  var len = parts.length, i = 0;\n  var end = '', beg = '';\n  var res = [];\n\n  // start at the end (innermost) first\n  while (len--) {\n    var inner = parts[i++];\n    if (inner === '^[!' || inner === '[!') {\n      inner = '';\n      negated = true;\n    }\n\n    var prefix = negated ? '^' : '';\n    var ch = POSIX[inner];\n\n    if (ch) {\n      res.push('[' + prefix + ch + ']');\n    } else if (inner) {\n      if (/^\\[?\\w-\\w\\]?$/.test(inner)) {\n        if (i === parts.length) {\n          res.push('[' + prefix + inner);\n        } else if (i === 1) {\n          res.push(prefix + inner + ']');\n        } else {\n          res.push(prefix + inner);\n        }\n      } else {\n        if (i === 1) {\n          beg += inner;\n        } else if (i === parts.length) {\n          end += inner;\n        } else {\n          res.push('[' + prefix + inner + ']');\n        }\n      }\n    }\n  }\n\n  var result = res.join('|');\n  var rlen = res.length || 1;\n  if (rlen > 1) {\n    result = '(?:' + result + ')';\n    rlen = 1;\n  }\n  if (beg) {\n    rlen++;\n    if (beg.charAt(0) === '[') {\n      if (imbalanced) {\n        beg = '\\\\[' + beg.slice(1);\n      } else {\n        beg += ']';\n      }\n    }\n    result = beg + result;\n  }\n  if (end) {\n    rlen++;\n    if (end.slice(-1) === ']') {\n      if (imbalanced) {\n        end = end.slice(0, end.length - 1) + '\\\\]';\n      } else {\n        end = '[' + end;\n      }\n    }\n    result += end;\n  }\n\n  if (rlen > 1) {\n    result = result.split('][').join(']|[');\n    if (result.indexOf('|') !== -1 && !/\\(\\?/.test(result)) {\n      result = '(?:' + result + ')';\n    }\n  }\n\n  result = result.replace(/\\[+=|=\\]+/g, '\\\\b');\n  return result;\n}\n\nbrackets.makeRe = function(pattern) {\n  try {\n    return new RegExp(brackets(pattern));\n  } catch (err) {}\n};\n\nbrackets.isMatch = function(str, pattern) {\n  try {\n    return brackets.makeRe(pattern).test(str);\n  } catch (err) {\n    return false;\n  }\n};\n\nbrackets.match = function(arr, pattern) {\n  var len = arr.length, i = 0;\n  var res = arr.slice();\n\n  var re = brackets.makeRe(pattern);\n  while (i < len) {\n    var ele = arr[i++];\n    if (!re.test(ele)) {\n      continue;\n    }\n    res.splice(i, 1);\n  }\n  return res;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}