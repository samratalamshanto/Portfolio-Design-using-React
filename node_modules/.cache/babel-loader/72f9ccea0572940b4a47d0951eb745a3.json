{"ast":null,"code":"export default function updateActiveIndex(newActiveIndex) {\n  var swiper = this;\n  var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  var slidesGrid = swiper.slidesGrid,\n      snapGrid = swiper.snapGrid,\n      params = swiper.params,\n      previousIndex = swiper.activeIndex,\n      previousRealIndex = swiper.realIndex,\n      previousSnapIndex = swiper.snapIndex;\n  var activeIndex = newActiveIndex;\n  var snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (var i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex: snapIndex,\n    realIndex: realIndex,\n    previousIndex: previousIndex,\n    activeIndex: activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","map":{"version":3,"names":["updateActiveIndex","newActiveIndex","swiper","translate","rtlTranslate","slidesGrid","snapGrid","params","previousIndex","activeIndex","previousRealIndex","realIndex","previousSnapIndex","snapIndex","i","length","normalizeSlideIndex","indexOf","skip","Math","min","slidesPerGroupSkip","floor","slidesPerGroup","emit","parseInt","slides","eq","attr","Object","assign","initialized","runCallbacksOnInit"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/client/node_modules/swiper/core/update/updateActiveIndex.js"],"sourcesContent":["export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}