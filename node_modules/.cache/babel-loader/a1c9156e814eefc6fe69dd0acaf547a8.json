{"ast":null,"code":"'use strict';\n\nvar assign = require('object-assign');\n\nvar path = require('path');\n\nvar mkdirp = require('mkdirp');\n\nvar fs = require('graceful-fs');\n\nfunction booleanOrFunc(v, file) {\n  if (typeof v !== 'boolean' && typeof v !== 'function') {\n    return null;\n  }\n\n  return typeof v === 'boolean' ? v : v(file);\n}\n\nfunction stringOrFunc(v, file) {\n  if (typeof v !== 'string' && typeof v !== 'function') {\n    return null;\n  }\n\n  return typeof v === 'string' ? v : v(file);\n}\n\nfunction prepareWrite(outFolder, file, opt, cb) {\n  var options = assign({\n    cwd: process.cwd(),\n    mode: file.stat ? file.stat.mode : null,\n    dirMode: null,\n    overwrite: true\n  }, opt);\n  var overwrite = booleanOrFunc(options.overwrite, file);\n  options.flag = overwrite ? 'w' : 'wx';\n  var cwd = path.resolve(options.cwd);\n  var outFolderPath = stringOrFunc(outFolder, file);\n\n  if (!outFolderPath) {\n    throw new Error('Invalid output folder');\n  }\n\n  var basePath = options.base ? stringOrFunc(options.base, file) : path.resolve(cwd, outFolderPath);\n\n  if (!basePath) {\n    throw new Error('Invalid base option');\n  }\n\n  var writePath = path.resolve(basePath, file.relative);\n  var writeFolder = path.dirname(writePath); // Wire up new properties\n\n  file.stat = file.stat || new fs.Stats();\n  file.stat.mode = options.mode;\n  file.flag = options.flag;\n  file.cwd = cwd;\n  file.base = basePath;\n  file.path = writePath; // Mkdirp the folder the file is going in\n\n  var mkdirpOpts = {\n    mode: options.dirMode,\n    fs: fs\n  };\n  mkdirp(writeFolder, mkdirpOpts, function (err) {\n    if (err) {\n      return cb(err);\n    }\n\n    cb(null, writePath);\n  });\n}\n\nmodule.exports = prepareWrite;","map":{"version":3,"names":["assign","require","path","mkdirp","fs","booleanOrFunc","v","file","stringOrFunc","prepareWrite","outFolder","opt","cb","options","cwd","process","mode","stat","dirMode","overwrite","flag","resolve","outFolderPath","Error","basePath","base","writePath","relative","writeFolder","dirname","Stats","mkdirpOpts","err","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl-fs/lib/prepareWrite.js"],"sourcesContent":["'use strict';\n\nvar assign = require('object-assign');\nvar path = require('path');\nvar mkdirp = require('mkdirp');\nvar fs = require('graceful-fs');\n\nfunction booleanOrFunc(v, file) {\n  if (typeof v !== 'boolean' && typeof v !== 'function') {\n    return null;\n  }\n\n  return typeof v === 'boolean' ? v : v(file);\n}\n\nfunction stringOrFunc(v, file) {\n  if (typeof v !== 'string' && typeof v !== 'function') {\n    return null;\n  }\n\n  return typeof v === 'string' ? v : v(file);\n}\n\nfunction prepareWrite(outFolder, file, opt, cb) {\n  var options = assign({\n    cwd: process.cwd(),\n    mode: (file.stat ? file.stat.mode : null),\n    dirMode: null,\n    overwrite: true,\n  }, opt);\n  var overwrite = booleanOrFunc(options.overwrite, file);\n  options.flag = (overwrite ? 'w' : 'wx');\n\n  var cwd = path.resolve(options.cwd);\n  var outFolderPath = stringOrFunc(outFolder, file);\n  if (!outFolderPath) {\n    throw new Error('Invalid output folder');\n  }\n  var basePath = options.base ?\n    stringOrFunc(options.base, file) : path.resolve(cwd, outFolderPath);\n  if (!basePath) {\n    throw new Error('Invalid base option');\n  }\n\n  var writePath = path.resolve(basePath, file.relative);\n  var writeFolder = path.dirname(writePath);\n\n  // Wire up new properties\n  file.stat = (file.stat || new fs.Stats());\n  file.stat.mode = options.mode;\n  file.flag = options.flag;\n  file.cwd = cwd;\n  file.base = basePath;\n  file.path = writePath;\n\n  // Mkdirp the folder the file is going in\n  var mkdirpOpts = {\n    mode: options.dirMode,\n    fs: fs,\n  };\n  mkdirp(writeFolder, mkdirpOpts, function(err) {\n    if (err) {\n      return cb(err);\n    }\n    cb(null, writePath);\n  });\n}\n\nmodule.exports = prepareWrite;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}