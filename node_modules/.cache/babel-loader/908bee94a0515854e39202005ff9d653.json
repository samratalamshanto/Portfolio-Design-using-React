{"ast":null,"code":"import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  var swiper = _ref.swiper,\n      extendParams = _ref.extendParams,\n      on = _ref.on;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true\n    }\n  });\n\n  var setTranslate = function setTranslate() {\n    var slides = swiper.slides,\n        activeIndex = swiper.activeIndex;\n    var params = swiper.params.cardsEffect;\n    var _swiper$touchEventsDa = swiper.touchEventsData,\n        startTranslate = _swiper$touchEventsDa.startTranslate,\n        isTouched = _swiper$touchEventsDa.isTouched;\n    var currentTranslate = swiper.translate;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var $slideEl = slides.eq(i);\n      var slideProgress = $slideEl[0].progress;\n      var progress = Math.min(Math.max(slideProgress, -4), 4);\n      var offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(\"translateX(\".concat(swiper.minTranslate(), \"px)\"));\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      var tY = 0;\n      var tZ = -100 * Math.abs(progress);\n      var scale = 1;\n      var rotate = -2 * progress;\n      var tXAdd = 8 - Math.abs(progress) * 0.75;\n      var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n      }\n\n      if (progress < 0) {\n        // next\n        tX = \"calc(\".concat(tX, \"px + (\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else if (progress > 0) {\n        // prev\n        tX = \"calc(\".concat(tX, \"px + (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n      } else {\n        tX = \"\".concat(tX, \"px\");\n      }\n\n      if (!swiper.isHorizontal()) {\n        var prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n      var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n\n      if (params.slideShadows) {\n        // Set shadows\n        var $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      var $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  var setTransition = function setTransition(duration) {\n    var transformEl = swiper.params.cardsEffect.transformEl;\n    var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper: swiper,\n      duration: duration,\n      transformEl: transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper: swiper,\n    on: on,\n    setTranslate: setTranslate,\n    setTransition: setTransition,\n    perspective: function perspective() {\n      return true;\n    },\n    overwriteParams: function overwriteParams() {\n      return {\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      };\n    }\n  });\n}","map":{"version":3,"names":["createShadow","effectInit","effectTarget","effectVirtualTransitionEnd","EffectCards","_ref","swiper","extendParams","on","cardsEffect","slideShadows","transformEl","rotate","setTranslate","slides","activeIndex","params","touchEventsData","startTranslate","isTouched","currentTranslate","translate","i","length","$slideEl","eq","slideProgress","progress","Math","min","max","offset","swiperSlideOffset","centeredSlides","cssMode","$wrapperEl","transform","minTranslate","tX","tY","tZ","abs","scale","tXAdd","slideIndex","virtual","enabled","from","isSwipeToNext","isSwipeToPrev","subProgress","isHorizontal","prevY","scaleString","$shadowEl","find","style","opacity","zIndex","round","$targetEl","setTransition","duration","$transitionElements","transition","effect","perspective","overwriteParams","watchSlidesProgress","virtualTranslate"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/client/node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}