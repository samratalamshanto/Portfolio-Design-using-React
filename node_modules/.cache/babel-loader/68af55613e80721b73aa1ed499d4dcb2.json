{"ast":null,"code":"var path = require('path');\n\nvar clone = require('clone');\n\nvar cloneStats = require('clone-stats');\n\nvar cloneBuffer = require('./lib/cloneBuffer');\n\nvar isBuffer = require('./lib/isBuffer');\n\nvar isStream = require('./lib/isStream');\n\nvar isNull = require('./lib/isNull');\n\nvar inspectStream = require('./lib/inspectStream');\n\nvar Stream = require('stream');\n\nvar replaceExt = require('replace-ext');\n\nvar builtInFields = ['_contents', 'contents', 'stat', 'history', 'path', 'base', 'cwd'];\n\nfunction File(file) {\n  var self = this;\n\n  if (!file) {\n    file = {};\n  } // Record path change\n\n\n  var history = file.path ? [file.path] : file.history;\n  this.history = history || [];\n  this.cwd = file.cwd || process.cwd();\n  this.base = file.base || this.cwd; // Stat = files stats object\n\n  this.stat = file.stat || null; // Contents = stream, buffer, or null if not read\n\n  this.contents = file.contents || null;\n  this._isVinyl = true; // Set custom properties\n\n  Object.keys(file).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      self[key] = file[key];\n    }\n  });\n}\n\nFile.prototype.isBuffer = function () {\n  return isBuffer(this.contents);\n};\n\nFile.prototype.isStream = function () {\n  return isStream(this.contents);\n};\n\nFile.prototype.isNull = function () {\n  return isNull(this.contents);\n}; // TODO: Should this be moved to vinyl-fs?\n\n\nFile.prototype.isDirectory = function () {\n  return this.isNull() && this.stat && this.stat.isDirectory();\n};\n\nFile.prototype.clone = function (opt) {\n  var self = this;\n\n  if (typeof opt === 'boolean') {\n    opt = {\n      deep: opt,\n      contents: true\n    };\n  } else if (!opt) {\n    opt = {\n      deep: true,\n      contents: true\n    };\n  } else {\n    opt.deep = opt.deep === true;\n    opt.contents = opt.contents !== false;\n  } // Clone our file contents\n\n\n  var contents;\n\n  if (this.isStream()) {\n    contents = this.contents.pipe(new Stream.PassThrough());\n    this.contents = this.contents.pipe(new Stream.PassThrough());\n  } else if (this.isBuffer()) {\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\n  }\n\n  var file = new this.constructor({\n    cwd: this.cwd,\n    base: this.base,\n    stat: this.stat ? cloneStats(this.stat) : null,\n    history: this.history.slice(),\n    contents: contents\n  }); // Clone our custom properties\n\n  Object.keys(this).forEach(function (key) {\n    if (self.constructor.isCustomProp(key)) {\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\n    }\n  });\n  return file;\n};\n\nFile.prototype.pipe = function (stream, opt) {\n  if (!opt) {\n    opt = {};\n  }\n\n  if (typeof opt.end === 'undefined') {\n    opt.end = true;\n  }\n\n  if (this.isStream()) {\n    return this.contents.pipe(stream, opt);\n  }\n\n  if (this.isBuffer()) {\n    if (opt.end) {\n      stream.end(this.contents);\n    } else {\n      stream.write(this.contents);\n    }\n\n    return stream;\n  } // Check if isNull\n\n\n  if (opt.end) {\n    stream.end();\n  }\n\n  return stream;\n};\n\nFile.prototype.inspect = function () {\n  var inspect = []; // Use relative path if possible\n\n  var filePath = this.base && this.path ? this.relative : this.path;\n\n  if (filePath) {\n    inspect.push('\"' + filePath + '\"');\n  }\n\n  if (this.isBuffer()) {\n    inspect.push(this.contents.inspect());\n  }\n\n  if (this.isStream()) {\n    inspect.push(inspectStream(this.contents));\n  }\n\n  return '<File ' + inspect.join(' ') + '>';\n};\n\nFile.isCustomProp = function (key) {\n  return builtInFields.indexOf(key) === -1;\n};\n\nFile.isVinyl = function (file) {\n  return file && file._isVinyl === true || false;\n}; // Virtual attributes\n// Or stuff with extra logic\n\n\nObject.defineProperty(File.prototype, 'contents', {\n  get: function () {\n    return this._contents;\n  },\n  set: function (val) {\n    if (!isBuffer(val) && !isStream(val) && !isNull(val)) {\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\n    }\n\n    this._contents = val;\n  }\n}); // TODO: Should this be moved to vinyl-fs?\n\nObject.defineProperty(File.prototype, 'relative', {\n  get: function () {\n    if (!this.base) {\n      throw new Error('No base specified! Can not get relative.');\n    }\n\n    if (!this.path) {\n      throw new Error('No path specified! Can not get relative.');\n    }\n\n    return path.relative(this.base, this.path);\n  },\n  set: function () {\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\n  }\n});\nObject.defineProperty(File.prototype, 'dirname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get dirname.');\n    }\n\n    return path.dirname(this.path);\n  },\n  set: function (dirname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set dirname.');\n    }\n\n    this.path = path.join(dirname, path.basename(this.path));\n  }\n});\nObject.defineProperty(File.prototype, 'basename', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get basename.');\n    }\n\n    return path.basename(this.path);\n  },\n  set: function (basename) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set basename.');\n    }\n\n    this.path = path.join(path.dirname(this.path), basename);\n  }\n}); // Property for getting/setting stem of the filename.\n\nObject.defineProperty(File.prototype, 'stem', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get stem.');\n    }\n\n    return path.basename(this.path, this.extname);\n  },\n  set: function (stem) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set stem.');\n    }\n\n    this.path = path.join(path.dirname(this.path), stem + this.extname);\n  }\n});\nObject.defineProperty(File.prototype, 'extname', {\n  get: function () {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get extname.');\n    }\n\n    return path.extname(this.path);\n  },\n  set: function (extname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set extname.');\n    }\n\n    this.path = replaceExt(this.path, extname);\n  }\n});\nObject.defineProperty(File.prototype, 'path', {\n  get: function () {\n    return this.history[this.history.length - 1];\n  },\n  set: function (path) {\n    if (typeof path !== 'string') {\n      throw new Error('path should be string');\n    } // Record history only when path changed\n\n\n    if (path && path !== this.path) {\n      this.history.push(path);\n    }\n  }\n});\nmodule.exports = File;","map":{"version":3,"names":["path","require","clone","cloneStats","cloneBuffer","isBuffer","isStream","isNull","inspectStream","Stream","replaceExt","builtInFields","File","file","self","history","cwd","process","base","stat","contents","_isVinyl","Object","keys","forEach","key","constructor","isCustomProp","prototype","isDirectory","opt","deep","pipe","PassThrough","slice","stream","end","write","inspect","filePath","relative","push","join","indexOf","isVinyl","defineProperty","get","_contents","set","val","Error","dirname","basename","extname","stem","length","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl/index.js"],"sourcesContent":["var path = require('path');\nvar clone = require('clone');\nvar cloneStats = require('clone-stats');\nvar cloneBuffer = require('./lib/cloneBuffer');\nvar isBuffer = require('./lib/isBuffer');\nvar isStream = require('./lib/isStream');\nvar isNull = require('./lib/isNull');\nvar inspectStream = require('./lib/inspectStream');\nvar Stream = require('stream');\nvar replaceExt = require('replace-ext');\n\nvar builtInFields = [\n  '_contents', 'contents', 'stat', 'history', 'path', 'base', 'cwd',\n];\n\nfunction File(file) {\n  var self = this;\n\n  if (!file) {\n    file = {};\n  }\n\n  // Record path change\n  var history = file.path ? [file.path] : file.history;\n  this.history = history || [];\n\n  this.cwd = file.cwd || process.cwd();\n  this.base = file.base || this.cwd;\n\n  // Stat = files stats object\n  this.stat = file.stat || null;\n\n  // Contents = stream, buffer, or null if not read\n  this.contents = file.contents || null;\n\n  this._isVinyl = true;\n\n  // Set custom properties\n  Object.keys(file).forEach(function(key) {\n    if (self.constructor.isCustomProp(key)) {\n      self[key] = file[key];\n    }\n  });\n}\n\nFile.prototype.isBuffer = function() {\n  return isBuffer(this.contents);\n};\n\nFile.prototype.isStream = function() {\n  return isStream(this.contents);\n};\n\nFile.prototype.isNull = function() {\n  return isNull(this.contents);\n};\n\n// TODO: Should this be moved to vinyl-fs?\nFile.prototype.isDirectory = function() {\n  return this.isNull() && this.stat && this.stat.isDirectory();\n};\n\nFile.prototype.clone = function(opt) {\n  var self = this;\n\n  if (typeof opt === 'boolean') {\n    opt = {\n      deep: opt,\n      contents: true,\n    };\n  } else if (!opt) {\n    opt = {\n      deep: true,\n      contents: true,\n    };\n  } else {\n    opt.deep = opt.deep === true;\n    opt.contents = opt.contents !== false;\n  }\n\n  // Clone our file contents\n  var contents;\n  if (this.isStream()) {\n    contents = this.contents.pipe(new Stream.PassThrough());\n    this.contents = this.contents.pipe(new Stream.PassThrough());\n  } else if (this.isBuffer()) {\n    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;\n  }\n\n  var file = new this.constructor({\n    cwd: this.cwd,\n    base: this.base,\n    stat: (this.stat ? cloneStats(this.stat) : null),\n    history: this.history.slice(),\n    contents: contents,\n  });\n\n  // Clone our custom properties\n  Object.keys(this).forEach(function(key) {\n    if (self.constructor.isCustomProp(key)) {\n      file[key] = opt.deep ? clone(self[key], true) : self[key];\n    }\n  });\n  return file;\n};\n\nFile.prototype.pipe = function(stream, opt) {\n  if (!opt) {\n    opt = {};\n  }\n  if (typeof opt.end === 'undefined') {\n    opt.end = true;\n  }\n\n  if (this.isStream()) {\n    return this.contents.pipe(stream, opt);\n  }\n  if (this.isBuffer()) {\n    if (opt.end) {\n      stream.end(this.contents);\n    } else {\n      stream.write(this.contents);\n    }\n    return stream;\n  }\n\n  // Check if isNull\n  if (opt.end) {\n    stream.end();\n  }\n  return stream;\n};\n\nFile.prototype.inspect = function() {\n  var inspect = [];\n\n  // Use relative path if possible\n  var filePath = (this.base && this.path) ? this.relative : this.path;\n\n  if (filePath) {\n    inspect.push('\"' + filePath + '\"');\n  }\n\n  if (this.isBuffer()) {\n    inspect.push(this.contents.inspect());\n  }\n\n  if (this.isStream()) {\n    inspect.push(inspectStream(this.contents));\n  }\n\n  return '<File ' + inspect.join(' ') + '>';\n};\n\nFile.isCustomProp = function(key) {\n  return builtInFields.indexOf(key) === -1;\n};\n\nFile.isVinyl = function(file) {\n  return (file && file._isVinyl === true) || false;\n};\n\n// Virtual attributes\n// Or stuff with extra logic\nObject.defineProperty(File.prototype, 'contents', {\n  get: function() {\n    return this._contents;\n  },\n  set: function(val) {\n    if (!isBuffer(val) && !isStream(val) && !isNull(val)) {\n      throw new Error('File.contents can only be a Buffer, a Stream, or null.');\n    }\n    this._contents = val;\n  },\n});\n\n// TODO: Should this be moved to vinyl-fs?\nObject.defineProperty(File.prototype, 'relative', {\n  get: function() {\n    if (!this.base) {\n      throw new Error('No base specified! Can not get relative.');\n    }\n    if (!this.path) {\n      throw new Error('No path specified! Can not get relative.');\n    }\n    return path.relative(this.base, this.path);\n  },\n  set: function() {\n    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');\n  },\n});\n\nObject.defineProperty(File.prototype, 'dirname', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get dirname.');\n    }\n    return path.dirname(this.path);\n  },\n  set: function(dirname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set dirname.');\n    }\n    this.path = path.join(dirname, path.basename(this.path));\n  },\n});\n\nObject.defineProperty(File.prototype, 'basename', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get basename.');\n    }\n    return path.basename(this.path);\n  },\n  set: function(basename) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set basename.');\n    }\n    this.path = path.join(path.dirname(this.path), basename);\n  },\n});\n\n// Property for getting/setting stem of the filename.\nObject.defineProperty(File.prototype, 'stem', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get stem.');\n    }\n    return path.basename(this.path, this.extname);\n  },\n  set: function(stem) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set stem.');\n    }\n    this.path = path.join(path.dirname(this.path), stem + this.extname);\n  },\n});\n\nObject.defineProperty(File.prototype, 'extname', {\n  get: function() {\n    if (!this.path) {\n      throw new Error('No path specified! Can not get extname.');\n    }\n    return path.extname(this.path);\n  },\n  set: function(extname) {\n    if (!this.path) {\n      throw new Error('No path specified! Can not set extname.');\n    }\n    this.path = replaceExt(this.path, extname);\n  },\n});\n\nObject.defineProperty(File.prototype, 'path', {\n  get: function() {\n    return this.history[this.history.length - 1];\n  },\n  set: function(path) {\n    if (typeof path !== 'string') {\n      throw new Error('path should be string');\n    }\n\n    // Record history only when path changed\n    if (path && path !== this.path) {\n      this.history.push(path);\n    }\n  },\n});\n\nmodule.exports = File;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}