{"ast":null,"code":"'use strict';\n\nvar Writable = require('readable-stream/writable');\n\nfunction listenerCount(stream, evt) {\n  return stream.listeners(evt).length;\n}\n\nfunction hasListeners(stream) {\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\n}\n\nfunction sink(stream) {\n  var sinkAdded = false;\n  var sinkStream = new Writable({\n    objectMode: true,\n    write: function (file, enc, cb) {\n      cb();\n    }\n  });\n\n  function addSink() {\n    if (sinkAdded) {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      return;\n    }\n\n    sinkAdded = true;\n    stream.pipe(sinkStream);\n  }\n\n  function removeSink(evt) {\n    if (evt !== 'readable' && evt !== 'data') {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      sinkAdded = false;\n      stream.unpipe(sinkStream);\n    }\n  }\n\n  stream.on('newListener', removeSink);\n  stream.on('removeListener', removeSink);\n  stream.on('removeListener', addSink);\n  return addSink;\n}\n\nmodule.exports = sink;","map":{"version":3,"names":["Writable","require","listenerCount","stream","evt","listeners","length","hasListeners","sink","sinkAdded","sinkStream","objectMode","write","file","enc","cb","addSink","pipe","removeSink","unpipe","on","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl-fs/lib/sink.js"],"sourcesContent":["'use strict';\n\nvar Writable = require('readable-stream/writable');\n\nfunction listenerCount(stream, evt) {\n  return stream.listeners(evt).length;\n}\n\nfunction hasListeners(stream) {\n  return !!(listenerCount(stream, 'readable') || listenerCount(stream, 'data'));\n}\n\nfunction sink(stream) {\n  var sinkAdded = false;\n  var sinkStream = new Writable({\n    objectMode: true,\n    write: function(file, enc, cb) {\n      cb();\n    },\n  });\n\n  function addSink() {\n    if (sinkAdded) {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      return;\n    }\n\n    sinkAdded = true;\n    stream.pipe(sinkStream);\n  }\n\n  function removeSink(evt) {\n    if (evt !== 'readable' && evt !== 'data') {\n      return;\n    }\n\n    if (hasListeners(stream)) {\n      sinkAdded = false;\n      stream.unpipe(sinkStream);\n    }\n  }\n\n  stream.on('newListener', removeSink);\n  stream.on('removeListener', removeSink);\n  stream.on('removeListener', addSink);\n\n  return addSink;\n}\n\nmodule.exports = sink;\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;EAClC,OAAOD,MAAM,CAACE,SAAP,CAAiBD,GAAjB,EAAsBE,MAA7B;AACD;;AAED,SAASC,YAAT,CAAsBJ,MAAtB,EAA8B;EAC5B,OAAO,CAAC,EAAED,aAAa,CAACC,MAAD,EAAS,UAAT,CAAb,IAAqCD,aAAa,CAACC,MAAD,EAAS,MAAT,CAApD,CAAR;AACD;;AAED,SAASK,IAAT,CAAcL,MAAd,EAAsB;EACpB,IAAIM,SAAS,GAAG,KAAhB;EACA,IAAIC,UAAU,GAAG,IAAIV,QAAJ,CAAa;IAC5BW,UAAU,EAAE,IADgB;IAE5BC,KAAK,EAAE,UAASC,IAAT,EAAeC,GAAf,EAAoBC,EAApB,EAAwB;MAC7BA,EAAE;IACH;EAJ2B,CAAb,CAAjB;;EAOA,SAASC,OAAT,GAAmB;IACjB,IAAIP,SAAJ,EAAe;MACb;IACD;;IAED,IAAIF,YAAY,CAACJ,MAAD,CAAhB,EAA0B;MACxB;IACD;;IAEDM,SAAS,GAAG,IAAZ;IACAN,MAAM,CAACc,IAAP,CAAYP,UAAZ;EACD;;EAED,SAASQ,UAAT,CAAoBd,GAApB,EAAyB;IACvB,IAAIA,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,MAAlC,EAA0C;MACxC;IACD;;IAED,IAAIG,YAAY,CAACJ,MAAD,CAAhB,EAA0B;MACxBM,SAAS,GAAG,KAAZ;MACAN,MAAM,CAACgB,MAAP,CAAcT,UAAd;IACD;EACF;;EAEDP,MAAM,CAACiB,EAAP,CAAU,aAAV,EAAyBF,UAAzB;EACAf,MAAM,CAACiB,EAAP,CAAU,gBAAV,EAA4BF,UAA5B;EACAf,MAAM,CAACiB,EAAP,CAAU,gBAAV,EAA4BJ,OAA5B;EAEA,OAAOA,OAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBd,IAAjB"},"metadata":{},"sourceType":"script"}