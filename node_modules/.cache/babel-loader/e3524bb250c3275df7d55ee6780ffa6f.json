{"ast":null,"code":"'use strict';\n\nvar assign = require('object-assign');\n\nvar through2 = require('through2');\n\nvar gs = require('glob-stream');\n\nvar duplexify = require('duplexify');\n\nvar merge = require('merge-stream');\n\nvar sourcemaps = require('gulp-sourcemaps');\n\nvar filterSince = require('../filterSince');\n\nvar isValidGlob = require('is-valid-glob');\n\nvar getContents = require('./getContents');\n\nvar wrapWithVinylFile = require('./wrapWithVinylFile');\n\nfunction src(glob, opt) {\n  var options = assign({\n    read: true,\n    buffer: true,\n    stripBOM: true,\n    sourcemaps: false,\n    passthrough: false,\n    followSymlinks: true\n  }, opt); // Don't pass `read` option on to through2\n\n  var read = options.read !== false;\n  options.read = undefined;\n  var inputPass;\n\n  if (!isValidGlob(glob)) {\n    throw new Error('Invalid glob argument: ' + glob);\n  }\n\n  var globStream = gs.create(glob, options);\n  var outputStream = globStream.pipe(wrapWithVinylFile(options));\n\n  if (options.since != null) {\n    outputStream = outputStream.pipe(filterSince(options.since));\n  }\n\n  if (read) {\n    outputStream = outputStream.pipe(getContents(options));\n  }\n\n  if (options.passthrough === true) {\n    inputPass = through2.obj(options);\n    outputStream = duplexify.obj(inputPass, merge(outputStream, inputPass));\n  }\n\n  if (options.sourcemaps === true) {\n    outputStream = outputStream.pipe(sourcemaps.init({\n      loadMaps: true\n    }));\n  }\n\n  globStream.on('error', outputStream.emit.bind(outputStream, 'error'));\n  return outputStream;\n}\n\nmodule.exports = src;","map":{"version":3,"names":["assign","require","through2","gs","duplexify","merge","sourcemaps","filterSince","isValidGlob","getContents","wrapWithVinylFile","src","glob","opt","options","read","buffer","stripBOM","passthrough","followSymlinks","undefined","inputPass","Error","globStream","create","outputStream","pipe","since","obj","init","loadMaps","on","emit","bind","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl-fs/lib/src/index.js"],"sourcesContent":["'use strict';\n\nvar assign = require('object-assign');\nvar through2 = require('through2');\nvar gs = require('glob-stream');\nvar duplexify = require('duplexify');\nvar merge = require('merge-stream');\nvar sourcemaps = require('gulp-sourcemaps');\nvar filterSince = require('../filterSince');\nvar isValidGlob = require('is-valid-glob');\n\nvar getContents = require('./getContents');\nvar wrapWithVinylFile = require('./wrapWithVinylFile');\n\nfunction src(glob, opt) {\n  var options = assign({\n    read: true,\n    buffer: true,\n    stripBOM: true,\n    sourcemaps: false,\n    passthrough: false,\n    followSymlinks: true,\n  }, opt);\n\n  // Don't pass `read` option on to through2\n  var read = options.read !== false;\n  options.read = undefined;\n\n  var inputPass;\n\n  if (!isValidGlob(glob)) {\n    throw new Error('Invalid glob argument: ' + glob);\n  }\n\n  var globStream = gs.create(glob, options);\n\n  var outputStream = globStream\n    .pipe(wrapWithVinylFile(options));\n\n  if (options.since != null) {\n    outputStream = outputStream\n      .pipe(filterSince(options.since));\n  }\n\n  if (read) {\n    outputStream = outputStream\n      .pipe(getContents(options));\n  }\n\n  if (options.passthrough === true) {\n    inputPass = through2.obj(options);\n    outputStream = duplexify.obj(inputPass, merge(outputStream, inputPass));\n  }\n  if (options.sourcemaps === true) {\n    outputStream = outputStream\n      .pipe(sourcemaps.init({ loadMaps: true }));\n  }\n  globStream.on('error', outputStream.emit.bind(outputStream, 'error'));\n  return outputStream;\n}\n\nmodule.exports = src;\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIO,WAAW,GAAGP,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIS,iBAAiB,GAAGT,OAAO,CAAC,qBAAD,CAA/B;;AAEA,SAASU,GAAT,CAAaC,IAAb,EAAmBC,GAAnB,EAAwB;EACtB,IAAIC,OAAO,GAAGd,MAAM,CAAC;IACnBe,IAAI,EAAE,IADa;IAEnBC,MAAM,EAAE,IAFW;IAGnBC,QAAQ,EAAE,IAHS;IAInBX,UAAU,EAAE,KAJO;IAKnBY,WAAW,EAAE,KALM;IAMnBC,cAAc,EAAE;EANG,CAAD,EAOjBN,GAPiB,CAApB,CADsB,CAUtB;;EACA,IAAIE,IAAI,GAAGD,OAAO,CAACC,IAAR,KAAiB,KAA5B;EACAD,OAAO,CAACC,IAAR,GAAeK,SAAf;EAEA,IAAIC,SAAJ;;EAEA,IAAI,CAACb,WAAW,CAACI,IAAD,CAAhB,EAAwB;IACtB,MAAM,IAAIU,KAAJ,CAAU,4BAA4BV,IAAtC,CAAN;EACD;;EAED,IAAIW,UAAU,GAAGpB,EAAE,CAACqB,MAAH,CAAUZ,IAAV,EAAgBE,OAAhB,CAAjB;EAEA,IAAIW,YAAY,GAAGF,UAAU,CAC1BG,IADgB,CACXhB,iBAAiB,CAACI,OAAD,CADN,CAAnB;;EAGA,IAAIA,OAAO,CAACa,KAAR,IAAiB,IAArB,EAA2B;IACzBF,YAAY,GAAGA,YAAY,CACxBC,IADY,CACPnB,WAAW,CAACO,OAAO,CAACa,KAAT,CADJ,CAAf;EAED;;EAED,IAAIZ,IAAJ,EAAU;IACRU,YAAY,GAAGA,YAAY,CACxBC,IADY,CACPjB,WAAW,CAACK,OAAD,CADJ,CAAf;EAED;;EAED,IAAIA,OAAO,CAACI,WAAR,KAAwB,IAA5B,EAAkC;IAChCG,SAAS,GAAGnB,QAAQ,CAAC0B,GAAT,CAAad,OAAb,CAAZ;IACAW,YAAY,GAAGrB,SAAS,CAACwB,GAAV,CAAcP,SAAd,EAAyBhB,KAAK,CAACoB,YAAD,EAAeJ,SAAf,CAA9B,CAAf;EACD;;EACD,IAAIP,OAAO,CAACR,UAAR,KAAuB,IAA3B,EAAiC;IAC/BmB,YAAY,GAAGA,YAAY,CACxBC,IADY,CACPpB,UAAU,CAACuB,IAAX,CAAgB;MAAEC,QAAQ,EAAE;IAAZ,CAAhB,CADO,CAAf;EAED;;EACDP,UAAU,CAACQ,EAAX,CAAc,OAAd,EAAuBN,YAAY,CAACO,IAAb,CAAkBC,IAAlB,CAAuBR,YAAvB,EAAqC,OAArC,CAAvB;EACA,OAAOA,YAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiBxB,GAAjB"},"metadata":{},"sourceType":"script"}