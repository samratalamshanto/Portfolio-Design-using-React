{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\n\nvar mkdirp = require('mkdirp');\n\nvar fo = require('../../fileOperations');\n\nfunction writeDir(writePath, file, written) {\n  var mkdirpOpts = {\n    mode: file.stat.mode,\n    fs: fs\n  };\n  mkdirp(writePath, mkdirpOpts, onMkdirp);\n\n  function onMkdirp(mkdirpErr) {\n    if (mkdirpErr) {\n      return written(mkdirpErr);\n    }\n\n    fs.open(writePath, 'r', onOpen);\n  }\n\n  function onOpen(openErr, fd) {\n    // If we don't have access, just move along\n    if (isInaccessible(openErr)) {\n      return fo.closeFd(null, fd, written);\n    }\n\n    if (openErr) {\n      return fo.closeFd(openErr, fd, written);\n    }\n\n    fo.updateMetadata(fd, file, onUpdate);\n  }\n\n  function onUpdate(statErr, fd) {\n    fo.closeFd(statErr, fd, written);\n  }\n}\n\nfunction isInaccessible(err) {\n  if (!err) {\n    return false;\n  }\n\n  if (err.code === 'EACCES') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = writeDir;","map":{"version":3,"names":["fs","require","mkdirp","fo","writeDir","writePath","file","written","mkdirpOpts","mode","stat","onMkdirp","mkdirpErr","open","onOpen","openErr","fd","isInaccessible","closeFd","updateMetadata","onUpdate","statErr","err","code","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl-fs/lib/dest/writeContents/writeDir.js"],"sourcesContent":["'use strict';\n\nvar fs = require('graceful-fs');\nvar mkdirp = require('mkdirp');\n\nvar fo = require('../../fileOperations');\n\nfunction writeDir(writePath, file, written) {\n  var mkdirpOpts = {\n    mode: file.stat.mode,\n    fs: fs,\n  };\n  mkdirp(writePath, mkdirpOpts, onMkdirp);\n\n  function onMkdirp(mkdirpErr) {\n    if (mkdirpErr) {\n      return written(mkdirpErr);\n    }\n\n    fs.open(writePath, 'r', onOpen);\n  }\n\n  function onOpen(openErr, fd) {\n    // If we don't have access, just move along\n    if (isInaccessible(openErr)) {\n      return fo.closeFd(null, fd, written);\n    }\n\n    if (openErr) {\n      return fo.closeFd(openErr, fd, written);\n    }\n\n    fo.updateMetadata(fd, file, onUpdate);\n  }\n\n  function onUpdate(statErr, fd) {\n    fo.closeFd(statErr, fd, written);\n  }\n}\n\nfunction isInaccessible(err) {\n    if (!err) {\n      return false;\n    }\n\n    if (err.code === 'EACCES') {\n      return true;\n    }\n\n    return false;\n  }\n\nmodule.exports = writeDir;\n"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIE,EAAE,GAAGF,OAAO,CAAC,sBAAD,CAAhB;;AAEA,SAASG,QAAT,CAAkBC,SAAlB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;EAC1C,IAAIC,UAAU,GAAG;IACfC,IAAI,EAAEH,IAAI,CAACI,IAAL,CAAUD,IADD;IAEfT,EAAE,EAAEA;EAFW,CAAjB;EAIAE,MAAM,CAACG,SAAD,EAAYG,UAAZ,EAAwBG,QAAxB,CAAN;;EAEA,SAASA,QAAT,CAAkBC,SAAlB,EAA6B;IAC3B,IAAIA,SAAJ,EAAe;MACb,OAAOL,OAAO,CAACK,SAAD,CAAd;IACD;;IAEDZ,EAAE,CAACa,IAAH,CAAQR,SAAR,EAAmB,GAAnB,EAAwBS,MAAxB;EACD;;EAED,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,EAAzB,EAA6B;IAC3B;IACA,IAAIC,cAAc,CAACF,OAAD,CAAlB,EAA6B;MAC3B,OAAOZ,EAAE,CAACe,OAAH,CAAW,IAAX,EAAiBF,EAAjB,EAAqBT,OAArB,CAAP;IACD;;IAED,IAAIQ,OAAJ,EAAa;MACX,OAAOZ,EAAE,CAACe,OAAH,CAAWH,OAAX,EAAoBC,EAApB,EAAwBT,OAAxB,CAAP;IACD;;IAEDJ,EAAE,CAACgB,cAAH,CAAkBH,EAAlB,EAAsBV,IAAtB,EAA4Bc,QAA5B;EACD;;EAED,SAASA,QAAT,CAAkBC,OAAlB,EAA2BL,EAA3B,EAA+B;IAC7Bb,EAAE,CAACe,OAAH,CAAWG,OAAX,EAAoBL,EAApB,EAAwBT,OAAxB;EACD;AACF;;AAED,SAASU,cAAT,CAAwBK,GAAxB,EAA6B;EACzB,IAAI,CAACA,GAAL,EAAU;IACR,OAAO,KAAP;EACD;;EAED,IAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;IACzB,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD;;AAEHC,MAAM,CAACC,OAAP,GAAiBrB,QAAjB"},"metadata":{},"sourceType":"script"}