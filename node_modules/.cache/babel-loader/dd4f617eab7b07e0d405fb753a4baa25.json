{"ast":null,"code":"// Copyright 2010-2011 Mikeal Rogers\n// \n//    Licensed under the Apache License, Version 2.0 (the \"License\");\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n// \n//        http://www.apache.org/licenses/LICENSE-2.0\n// \n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\nvar sys = require('sys'),\n    fs = require('fs'),\n    path = require('path'),\n    events = require('events');\n\nfunction walk(dir, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!callback.files) callback.files = {};\n  if (!callback.pending) callback.pending = 0;\n  callback.pending += 1;\n  fs.stat(dir, function (err, stat) {\n    if (err) return callback(err);\n    callback.files[dir] = stat;\n    fs.readdir(dir, function (err, files) {\n      if (err) return callback(err);\n      callback.pending -= 1;\n      files.forEach(function (f) {\n        f = path.join(dir, f);\n        callback.pending += 1;\n        fs.stat(f, function (err, stat) {\n          if (err) return callback(err);\n          callback.pending -= 1;\n          if (options.ignoreDotFiles && path.basename(f)[0] === '.') return;\n          if (options.filter && options.filter(f)) return;\n          callback.files[f] = stat;\n          if (stat.isDirectory()) walk(f, options, callback);\n          if (callback.pending === 0) callback(null, callback.files);\n        });\n      });\n      if (callback.pending === 0) callback(null, callback.files);\n    });\n    if (callback.pending === 0) callback(null, callback.files);\n  });\n}\n\nexports.watchTree = function (root, options, callback) {\n  if (!callback) {\n    callback = options;\n    options = {};\n  }\n\n  walk(root, options, function (err, files) {\n    if (err) throw err;\n\n    var fileWatcher = function (f) {\n      fs.watchFile(f, options, function (c, p) {\n        // Check if anything actually changed in stat\n        if (files[f] && !files[f].isDirectory() && c.nlink !== 0 && files[f].mtime == c.mtime) return;\n        files[f] = c;\n        if (!files[f].isDirectory()) callback(f, c, p);else {\n          fs.readdir(f, function (err, nfiles) {\n            if (err) return;\n            nfiles.forEach(function (b) {\n              var file = path.join(f, b);\n\n              if (!files[file]) {\n                fs.stat(file, function (err, stat) {\n                  callback(file, stat, null);\n                  files[file] = stat;\n                  fileWatcher(file);\n                });\n              }\n            });\n          });\n        }\n\n        if (c.nlink === 0) {\n          // unwatch removed files.\n          delete files[f];\n          fs.unwatchFile(f);\n        }\n      });\n    };\n\n    fileWatcher(root);\n\n    for (i in files) {\n      fileWatcher(i);\n    }\n\n    callback(files, null, null);\n  });\n};\n\nexports.createMonitor = function (root, options, cb) {\n  if (!cb) {\n    cb = options;\n    options = {};\n  }\n\n  var monitor = new events.EventEmitter();\n  exports.watchTree(root, options, function (f, curr, prev) {\n    if (typeof f == \"object\" && prev == null && curr === null) {\n      monitor.files = f;\n      return cb(monitor);\n    }\n\n    if (prev === null) {\n      return monitor.emit(\"created\", f, curr);\n    }\n\n    if (curr.nlink === 0) {\n      return monitor.emit(\"removed\", f, curr);\n    }\n\n    monitor.emit(\"changed\", f, curr, prev);\n  });\n};\n\nexports.walk = walk;","map":{"version":3,"names":["sys","require","fs","path","events","walk","dir","options","callback","files","pending","stat","err","readdir","forEach","f","join","ignoreDotFiles","basename","filter","isDirectory","exports","watchTree","root","fileWatcher","watchFile","c","p","nlink","mtime","nfiles","b","file","unwatchFile","i","createMonitor","cb","monitor","EventEmitter","curr","prev","emit"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/watch/main.js"],"sourcesContent":["// Copyright 2010-2011 Mikeal Rogers\n// \n//    Licensed under the Apache License, Version 2.0 (the \"License\");\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n// \n//        http://www.apache.org/licenses/LICENSE-2.0\n// \n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an \"AS IS\" BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\n\nvar sys = require('sys')\n  , fs = require('fs')\n  , path = require('path')\n  , events = require('events')\n  ;\n\nfunction walk (dir, options, callback) { \n  if (!callback) {callback = options; options = {}}\n  if (!callback.files) callback.files = {};\n  if (!callback.pending) callback.pending = 0;\n  callback.pending += 1;\n  fs.stat(dir, function (err, stat) {\n    if (err) return callback(err);\n    callback.files[dir] = stat;\n    fs.readdir(dir, function (err, files) {\n      if (err) return callback(err);\n      callback.pending -= 1;\n      files.forEach(function (f) {\n        f = path.join(dir, f);\n        callback.pending += 1;\n        fs.stat(f, function (err, stat) {\n          if (err) return callback(err)\n          callback.pending -= 1;\n          if (options.ignoreDotFiles && path.basename(f)[0] === '.') return;\n          if (options.filter && options.filter(f)) return;\n          callback.files[f] = stat;\n          if (stat.isDirectory()) walk(f, options, callback);\n          if (callback.pending === 0) callback(null, callback.files);\n        })\n      })\n      if (callback.pending === 0) callback(null, callback.files);\n    })\n    if (callback.pending === 0) callback(null, callback.files);\n  })\n  \n}\nexports.watchTree = function ( root, options, callback ) {\n  if (!callback) {callback = options; options = {}}\n  walk(root, options, function (err, files) {\n    if (err) throw err;\n    var fileWatcher = function (f) {\n      fs.watchFile(f, options, function (c, p) {\n        // Check if anything actually changed in stat\n        if (files[f] && !files[f].isDirectory() && c.nlink !== 0 && files[f].mtime == c.mtime) return;\n        files[f] = c;\n        if (!files[f].isDirectory()) callback(f, c, p);\n        else {\n          fs.readdir(f, function (err, nfiles) {\n            if (err) return;\n            nfiles.forEach(function (b) {\n              var file = path.join(f, b);\n              if (!files[file]) {\n                fs.stat(file, function (err, stat) {\n                  callback(file, stat, null);\n                  files[file] = stat;\n                  fileWatcher(file);\n                })\n              }\n            })\n          })\n        }\n        if (c.nlink === 0) {\n          // unwatch removed files.\n          delete files[f]\n          fs.unwatchFile(f);\n        }\n      })\n    }\n    fileWatcher(root);\n    for (i in files) {\n      fileWatcher(i);\n    }\n    callback(files, null, null);\n  })\n}\n\nexports.createMonitor = function (root, options, cb) {\n  if (!cb) {cb = options; options = {}}\n  var monitor = new events.EventEmitter();\n  exports.watchTree(root, options, function (f, curr, prev) {\n    if (typeof f == \"object\" && prev == null && curr === null) {\n      monitor.files = f;\n      return cb(monitor);\n    }\n    if (prev === null) {\n      return monitor.emit(\"created\", f, curr);\n    }\n    if (curr.nlink === 0) {\n      return monitor.emit(\"removed\", f, curr);\n    }\n    monitor.emit(\"changed\", f, curr, prev);\n  })\n}\n\nexports.walk = walk;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}