{"ast":null,"code":"'use strict';\n\nvar through2 = require('through2');\n\nvar fs = require('graceful-fs');\n\nvar File = require('vinyl');\n\nfunction wrapWithVinylFile(options) {\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(globFile, enc, cb) {\n    fs.lstat(globFile.path, function (err, stat) {\n      if (err) {\n        return cb(err);\n      }\n\n      globFile.stat = stat;\n\n      if (!stat.isSymbolicLink() || !options.followSymlinks) {\n        var vinylFile = new File(globFile);\n\n        if (globFile.originalSymlinkPath) {\n          // If we reach here, it means there is at least one\n          // symlink on the path and we need to rewrite the path\n          // to its original value.\n          // Updated file stats will tell getContents() to actually read it.\n          vinylFile.path = globFile.originalSymlinkPath;\n        }\n\n        return cb(null, vinylFile);\n      }\n\n      fs.realpath(globFile.path, function (err, filePath) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!globFile.originalSymlinkPath) {\n          // Store the original symlink path before the recursive call\n          // to later rewrite it back.\n          globFile.originalSymlinkPath = globFile.path;\n        }\n\n        globFile.path = filePath; // Recurse to get real file stat\n\n        resolveFile(globFile, enc, cb);\n      });\n    });\n  }\n\n  return through2.obj(options, resolveFile);\n}\n\nmodule.exports = wrapWithVinylFile;","map":{"version":3,"names":["through2","require","fs","File","wrapWithVinylFile","options","resolveFile","globFile","enc","cb","lstat","path","err","stat","isSymbolicLink","followSymlinks","vinylFile","originalSymlinkPath","realpath","filePath","obj","module","exports"],"sources":["G:/anaconda/project/download files/last down/New folder/desktop/Samrat/protfolio/protfolio/node_modules/vinyl-fs/lib/src/wrapWithVinylFile.js"],"sourcesContent":["'use strict';\n\nvar through2 = require('through2');\nvar fs = require('graceful-fs');\nvar File = require('vinyl');\n\nfunction wrapWithVinylFile(options) {\n\n  // A stat property is exposed on file objects as a (wanted) side effect\n  function resolveFile(globFile, enc, cb) {\n    fs.lstat(globFile.path, function(err, stat) {\n      if (err) {\n        return cb(err);\n      }\n\n      globFile.stat = stat;\n\n      if (!stat.isSymbolicLink() || !options.followSymlinks) {\n        var vinylFile = new File(globFile);\n        if (globFile.originalSymlinkPath) {\n          // If we reach here, it means there is at least one\n          // symlink on the path and we need to rewrite the path\n          // to its original value.\n          // Updated file stats will tell getContents() to actually read it.\n          vinylFile.path = globFile.originalSymlinkPath;\n        }\n        return cb(null, vinylFile);\n      }\n\n      fs.realpath(globFile.path, function(err, filePath) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!globFile.originalSymlinkPath) {\n          // Store the original symlink path before the recursive call\n          // to later rewrite it back.\n          globFile.originalSymlinkPath = globFile.path;\n        }\n        globFile.path = filePath;\n\n        // Recurse to get real file stat\n        resolveFile(globFile, enc, cb);\n      });\n    });\n  }\n\n  return through2.obj(options, resolveFile);\n}\n\nmodule.exports = wrapWithVinylFile;\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,OAAD,CAAlB;;AAEA,SAASG,iBAAT,CAA2BC,OAA3B,EAAoC;EAElC;EACA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,GAA/B,EAAoCC,EAApC,EAAwC;IACtCP,EAAE,CAACQ,KAAH,CAASH,QAAQ,CAACI,IAAlB,EAAwB,UAASC,GAAT,EAAcC,IAAd,EAAoB;MAC1C,IAAID,GAAJ,EAAS;QACP,OAAOH,EAAE,CAACG,GAAD,CAAT;MACD;;MAEDL,QAAQ,CAACM,IAAT,GAAgBA,IAAhB;;MAEA,IAAI,CAACA,IAAI,CAACC,cAAL,EAAD,IAA0B,CAACT,OAAO,CAACU,cAAvC,EAAuD;QACrD,IAAIC,SAAS,GAAG,IAAIb,IAAJ,CAASI,QAAT,CAAhB;;QACA,IAAIA,QAAQ,CAACU,mBAAb,EAAkC;UAChC;UACA;UACA;UACA;UACAD,SAAS,CAACL,IAAV,GAAiBJ,QAAQ,CAACU,mBAA1B;QACD;;QACD,OAAOR,EAAE,CAAC,IAAD,EAAOO,SAAP,CAAT;MACD;;MAEDd,EAAE,CAACgB,QAAH,CAAYX,QAAQ,CAACI,IAArB,EAA2B,UAASC,GAAT,EAAcO,QAAd,EAAwB;QACjD,IAAIP,GAAJ,EAAS;UACP,OAAOH,EAAE,CAACG,GAAD,CAAT;QACD;;QAED,IAAI,CAACL,QAAQ,CAACU,mBAAd,EAAmC;UACjC;UACA;UACAV,QAAQ,CAACU,mBAAT,GAA+BV,QAAQ,CAACI,IAAxC;QACD;;QACDJ,QAAQ,CAACI,IAAT,GAAgBQ,QAAhB,CAViD,CAYjD;;QACAb,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,EAAhB,CAAX;MACD,CAdD;IAeD,CAlCD;EAmCD;;EAED,OAAOT,QAAQ,CAACoB,GAAT,CAAaf,OAAb,EAAsBC,WAAtB,CAAP;AACD;;AAEDe,MAAM,CAACC,OAAP,GAAiBlB,iBAAjB"},"metadata":{},"sourceType":"script"}